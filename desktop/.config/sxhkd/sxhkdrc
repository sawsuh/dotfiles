#modes:
#super + r - run
#super + s - node control
#super + a - resize
#super + w - preselect

#
# wm independent hotkeys
#

# terminal emulator
super + r; z
	kitty --name term
super + z
	kitty --name term

super + r; x
	bash ~/.scripts/term.sh

# program launcher
super + r; Return
	export PATH=~/.local/bin:$PATH; rofi -theme rofi-theme -show run -display-run ""

super + Return
	export PATH=~/.local/bin:$PATH; rofi -theme rofi-theme -show run -display-run ""

# password manager
super + p
	rofi-pass
super + r; p
	rofi-pass

# start music player
super + r; s
	spotify

# start file browser
super + r; f
	bash ~/.scripts/files.sh

# start web browser
super + r; b
	firefox
super + r; shift + b
	chromium
super + r; ctrl + b
	chromium --incognito

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# suspend
super + alt + q
	systemctl suspend

# quit bspwm 
super + alt + shift + Escape
	pkill bspwm

# close and kill
super + s: {_, shift + } q
	bspc node -{c,k}

# close and kill
super + {_, shift + } q
	bspc node -{c,k}

#
# state/flags
#

# set the window state
super + {t,shift + t,x,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}
super + s; {t,shift + t,x,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# set the desktop to monocle mode
super + m

# focus the node in the given direction
super + {h,j,k,l}
	bspc node -f {west,south,north,east}

# focus the node in the given direction
super + s: {_, shift + } {h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# shift window into preselected region
super + s: super + {h,j,k,l}
	bspc node --to-node {west,south,north,east}

# rotate the current node
super + s: {m, n}
	bspc node @/ -R {90, -90}

# cycle the focused desktop mode
super + m 
	bspc desktop focused --layout next

# focus the next in the current desktop
super + s: {_,shift + }Tab
	bspc node -f {next,prev}.local

# focus the next in the current desktop
super + {_,shift + }Tab
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + s: super + {c,v}
	bspc desktop -f {prev,next}.local; 

# focus the next/previous desktop in the current monitor
super + {c,v}
	bspc desktop -f {prev,next}.local; 

# send to next desktop
super + s: {c,v}
	bspc node -d {prev,next}

# send to the given desktop
super + s: {1-9,0}
	bspc node -d '^{1-9,10}'

# focus the given desktop
super + s: super + {1-9,0}
	bspc desktop -f '^{1-9,10}'; 

# focus the given desktop
super + {1-9,0}
	bspc desktop -f '^{1-9,10}'; 
#
# preselect
#

# preselect the direction
super + w: {h,j,k,l}
	bspc node -p {west,south,north,east}

# cancel the preselection for the focused node
super + w: c 
	bspc node -p cancel

#
# move/resize
#

# move window
super + shift + a: {h,l,k,j}:
    xdo move {-x -50,-x +50,-y -50,-y +50}
super + shift + a: shift + {h,l,k,j}:
    xdo move {-x -10,-x +10,-y -10,-y +10}

# expand a window by moving one of its side outward
super + a: ctrl + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}
super + a: {h,j,k,l}
	bspc node -z {left -50 0,bottom 0 50,top 0 -50,right 50 0}

# contract a window by moving one of its side inward
super + a: shift + ctrl + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}
super + a: shift + {h,j,k,l}
	bspc node -z {right -50 0,top 0 50,bottom 0 -50,left 50 0}

# resize a window based on a rectangle
super + a: w
	wmctrl -r :ACTIVE: -e "$(slop -f 0,%x,%y,%w,%h)"


# take a screenshot
super + alt + c
	bash ~/.scripts/scr.sh
Print
	bash ~/.scripts/scr.sh

# take a screenshot with selection
super + shift + c
	bash ~/.scripts/scrrect.sh
#	maim -sul -b 0 -c 0.25882352941176473,0.25882352941176473,0.23921568627450981,0.5 $(date +'%-d-%-m-%-y_%T').png

# volume control
super + shift + {m,n} 
	pactl -- set-sink-volume 1 {+3%,-3%}
{XF86AudioRaiseVolume,XF86AudioLowerVolume}
	pactl -- set-sink-volume 1 {+3%,-3%}

# mute
super + alt + m
	pactl set-sink-mute 1 toggle

# clipboard list
super + ctrl + v
    rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}' -theme rofi-theme

# bar notification toggle
super + b
    bash ~/.scripts/bartoggle.sh
